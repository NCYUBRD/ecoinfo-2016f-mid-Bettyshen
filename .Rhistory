fib <- numeric(sequence)
#指定第一個數值為"1"、第二個數值為"2"
fib[1] <-1
fib[2] <-2
#用for迴圈寫出前一個數值是由前兩個數值相加,因為前兩個數值已經設定好，我們從第三個數值開始設定即可
for (i in 3:sequence) {fib[i] <- fib[i-2]+fib[i-1]
}
print(fib)
#輸入必要的library,設定工作目錄
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
read.csv('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt')
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample <- read.csv('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample <- read.csv('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
summary(sample)
#增設一個欄(variable),命名為" timestamp"
class(sample)
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample <- read.csv('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式
class(sample)
cbind(sample,'timestamp')
#再增設一個欄(variable),命名為" timestamp"
#格式為data.frame沒錯，再來就是用cbind合併多的一個欄位"timestamp"
View(sample)
---
title: "1033273_mid_rmarkdown"
author: "沈芳伃"
date: "November 17, 2016"
output: html_document
---
#試題###
##一. 請隨機產生 10000 組正整數儲存成 vector 格式，並輸出成 random10k.csv (5%)
##二. 請使用 for 迴圈列出 15 個費布納西(Fibonacci)數列 (10%)
##三. 請將 sample_data.txt 輸入進 R 內，並完成以下計算 (55%)
(a) 將 yyyymmddhh 轉成 POSIXct 時間戳記格式， 並新增為一個欄(variable)，命名為 timestamp。並將此 sample data 輸出為 sample_data_parsed.csv (以逗號分隔，具有欄位名稱)
(b) 請計算 2014 年至 2015 年這個測站的每月平均氣溫、每月平均濕度、每月累積降水，
(c) 請計算 2014 年和 2015 年最冷月分別是在哪個月份？(提示：先計算月均溫)
(d) 在 2015 年最冷的那個月份中，該月中每日的最低溫平均是幾度C？
(e) 請計算 2014 年和 2015 年中，最熱的月分別是在哪個月份？
(f) 請計算 2014 年最熱的月份中，該月的每日最高溫平均為幾度C?
(g) 請算出 2014 至 2015 年中，最濕月份的平均溫度
(h) 請計算每個月的月溫差(每月最高溫減去每月最高溫，取兩年平均)，平均月溫差最大的是哪個月？
(i) 請計算這兩年的年溫差平均(每年最高溫減去最低溫)
(j) 溫量指數(warmth index)是 Kira (1945) 提出的一個生態氣候指標，其計算方式為:
(k) 請使用 climatol package 繪製 2014 至 2015 的生態氣候圖(Ecological climate diagrams)。 提示：你需要計算出每個月的累積降水平均、每日最高溫平均、每日最低溫平均、每月絕對最低溫。 可參考繪製生態氣候圖
##四. 請計算 Table 2 中的下列各子題 (30%)
(a) 請計算各島環境因子(total_cover, C, EC, ..., etc.) 的平均、 第一四分位數、中位數、第三四分位數、最大值及最小值以及標準差，並整理成如下表格：
(b) 請分別列出 C, EC, K, Na, N 最高的五個樣區(plotid)
#解答一
產生10000組隨機正整數,使用sample.int(n, size = n, replace = FALSE, prob = NULL)，正整數定義為：大於零且間隔等於一的整數
```{r}
random10k<-sample.int(10000)
print(random10k)
#檔案輸出write.csv()
write.csv(random10k,file = '~/Desktop/生態資訊學/生態資訊學期中考/random10k.csv')
```
#解答二
使用費部納西數列：因此先設定15個數字的數列，再指定第一個數值為1、第二個數值為2。再用for迴圈寫出後面一個數值是由前面兩個數值相加而成
```{r}
sequence <- 15
fib <- numeric(sequence)
#指定第一個數值為"1"、第二個數值為"2"
fib[1] <-1
fib[2] <-2
#用for迴圈寫出前一個數值是由前兩個數值相加,因為前兩個數值已經設定好，我們從第三個數值開始設定即可
for (i in 3:sequence) {fib[i] <- fib[i-2]+fib[i-1]
}
print(fib)
```
#解答三
(a)先將檔案匯入進來，打開檔案查看檔案格式與每列代表的意義：
yyyymmddhh: 西元四位數年
PS01: 測站氣壓(hPa)
TX01: 溫度(ºC)
RH01: 相對濕度(%)
WD01: 平均風風速(m/s)
WD02: 平均風風向(360 degree)
PP01: 降水量(mm)
SS01: 日照時數(hr)
##從原始資料可以發現有些日期的資料呈現-9996、-9997、-9999，有可能是記錄裝置出現問題，因此我們將這些資料設定為NA，這樣在未來統計資料時就不會影響原始資料了,另外我們將 yyyymmddhh 轉成 POSIXct 時間戳記格式
```{r}
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample <- read.csv('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式
class(sample)
cbind(sample,'timestamp')
#再增設一個欄(variable),命名為" timestamp"
#格式為data.frame沒錯，再來就是用cbind合併多的一個欄位"timestamp"
```
View(sample)
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample <- read.csv('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
View(sample)
View(sample)
View(sample)
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
View(sample)
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式
class(sample)
cbind(sample,'timestamp')
#再增設一個欄(variable),命名為" timestamp"
#格式為data.frame沒錯，再來就是用cbind合併多的一個欄位"timestamp"
View(sample)
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式
class(sample)
cbind(sample,'timestamp')
View(sample)
sample <- cbind(sample,'timestamp')
View(sample)
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式
class(sample)
colnames(sample) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
#再增設一個欄(variable),命名為" timestamp"
#格式為data.frame沒錯，再來就是用cbind合併多的一個欄位"timestamp"
View(sample)
colnames(sample) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
View(sample)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式
class(sample)
sample<- cbind(sample,strptime(sample$yyyymmddhh-1,"%Y%m%d%H")
colnames(sample) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式
class(sample)
sample<- cbind(sample,strptime(sample$yyyymmddhh-1,"%Y%m%d%H"))
colnames(sample) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式
class(sample)
sample<- cbind(sample,strptime(sample$yyyymmddhh-1,"%Y%m%d%H"))
colnames(sample) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
#再增設一個欄(variable),命名為" timestamp"
#格式為data.frame沒錯，再來就是用cbind合併多的一個欄位"timestamp"
View(sample)
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample_data_parsed <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式,再增設一個欄(variable),命名為" timestamp"
class(sample_data_parsed)
#格式為data.frame沒錯，再來就是用cbind合併多的一個欄位"timestamp"。
#先指定原始資料第一欄"$"，因為一開始時間軸都是從第一小時開始計算，我們想要固定格式從"0"小時開始，所以我們把原始時間都"-1"。用strptime置換時間格式成"2014-01-01 02:00:00"的樣式
sample_data_parsed<- cbind(sample_data_parsed,strptime(sample_data_parsed$yyyymmddhh-1,"%Y%m%d%H"))
#將最後一欄命名為"timestamp"
colnames(sample_data_parsed) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
View(sample_data_parsed)
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample_data_parsed <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式,再增設一個欄(variable),命名為" timestamp"
class(sample_data_parsed)
#格式為data.frame沒錯，再來就是用cbind合併多的一個欄位"timestamp"。
#先指定原始資料第一欄"$"，因為一開始時間軸都是從第一小時開始計算，我們想要固定格式從"0"小時開始，所以我們把原始時間都"-1"。用strptime置換時間格式成"2014-01-01 02:00:00"的樣式
sample_data_parsed<- cbind(sample_data_parsed,strptime(sample_data_parsed$yyyymmddhh-1,"%Y%m%d%H"))
#將最後一欄命名為"timestamp"
colnames(sample_data_parsed) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
#輸出為 sample_data_parsed.csv
write.csv(sample_data_parsed,sep = ",")
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample_data_parsed <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式,再增設一個欄(variable),命名為" timestamp"
class(sample_data_parsed)
#格式為data.frame沒錯，再來就是用cbind合併多的一個欄位"timestamp"。
#先指定原始資料第一欄"$"，因為一開始時間軸都是從第一小時開始計算，我們想要固定格式從"0"小時開始，所以我們把原始時間都"-1"。用strptime置換時間格式成"2014-01-01 02:00:00"的樣式
sample_data_parsed<- cbind(sample_data_parsed,strptime(sample_data_parsed$yyyymmddhh-1,"%Y%m%d%H"))
#將最後一欄命名為"timestamp"
colnames(sample_data_parsed) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
#輸出為 sample_data_parsed.csv
write.csv(sample_data_parsed,file='~/Desktop/生態資訊學/生態資訊學期中考/',sep = ",")
#輸入必要的library,設定工作目錄,將'sample_data.txt'匯入r中
library(data.table)
setwd('~/Desktop/生態資訊學/生態資訊學期中考/~')
#將資料呈現-9996、-9997、-9999數值轉為NA
sample_data_parsed <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
#先確定他是否為data.frame格式，再將 yyyymmddhh 轉成 POSIXct 時間戳記格式,再增設一個欄(variable),命名為" timestamp"
class(sample_data_parsed)
#格式為data.frame沒錯，再來就是用cbind合併多的一個欄位"timestamp"。
#先指定原始資料第一欄"$"，因為一開始時間軸都是從第一小時開始計算，我們想要固定格式從"0"小時開始，所以我們把原始時間都"-1"。用strptime置換時間格式成"2014-01-01 02:00:00"的樣式
sample_data_parsed<- cbind(sample_data_parsed,strptime(sample_data_parsed$yyyymmddhh-1,"%Y%m%d%H"))
#將最後一欄命名為"timestamp"
colnames(sample_data_parsed) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
#輸出為 sample_data_parsed.csv
write.csv(sample_data_parsed,file='~/Desktop/生態資訊學/生態資訊學期中考/sample_data_parsed',sep = ",")
View(sample_data_parsed)
#每月平均氣溫
mean(sample_data_parsed$TX01)
#每月平均氣溫
mean<-mean(sample_data_parsed$TX01)
#每月平均氣溫
mean<-mean(sample_data_parsed$TX01)
print(mean)
View(sample)
View(sample_data_parsed)
#每月平均氣溫
mean(sample_data_parsed$TX01)
#每月平均氣溫
aggregate[sample_data_parsed$TX01, by=list(sample_data_parsed$yyyymmddhh),function(mean)]
#每月平均氣溫
aggregate(sample_data_parsed$TX01, by=list(sample_data_parsed$yyyymmddhh),mean)
#每月平均氣溫
aggregate(sample_data_parsed$TX01, by=list(sample_data_parsed$yyyymmddhh),mean)
#新增‘年’與‘日’的時間標記，方便之後計算
sample_data_parsed[, day= format.Date(timestamp, '%Y-%m-%d')]
#新增‘年’與‘日’的時間標記，方便之後計算
sample_data_parsed[, day:= format.Date(timestamp, '%Y-%m-%d')]
#新增‘年’與‘日’的時間標記，方便之後計算
by_month <- group_by(sample_data_parsed, month
#新增‘年’與‘日’的時間標記，方便之後計算
by_month <- group_by(sample_data_parsed, month)
#新增‘年’與‘日’的時間標記，方便之後計算
by_month <- group_by(sample_data_parsed, month)
#
sample_data_parsed[[1]][, day:= as.POSIXct(striptime(yyyymmddhh, '%Y%m%d'))]
View(sample_data_parsed)
#
mean <- aggregate(TX01~day, data= sample_data_parsed, FUN= mean)
#
mean <- aggregate('TX01~day', data= sample_data_parsed, FUN= mean)
#
mean <- aggregate(TX01~day, data= sample_data_parsed, FUN= mean)
#
sample_data_parsed[ ,day:= format.Date(timestamp, '%Y-%m-%d')]
mean <- aggregate(TX01~day, data= sample_data_parsed, FUN= mean)
#
aggregate(sample_data_parsed, by=list(yyyymmdd,PS01),FUN= 'mean')
#
cbind(sample_data_parsed,'yyyymm')
aggregate(sample_data_parsed, by=list(yyyymm,PS01),FUN= 'mean')
View(sample_data_parsed)
View(sample)
#
cbind(sample_data_parsed,'yyyymm')
aggregate.data.frame(sample_data_parsed, by=list(yyyymm,PS01),FUN= 'mean')
sample_data_parsed[, month:=format.Date(timestamp, '%Y-%m')]
library(data.table)
sample_data_parsed[, month:=format.Date(timestamp, '%Y-%m')]
sample_data_parsed[, month:= format.Date(timestamp, '%Y-%m')]
library(data.table)
sample_data_parsed[, month:= format.Date(timestamp, '%Y-%m')]
set.wd('~/Desktop/生態資訊學/生態資訊學期中考')
setwd('~/Desktop/生態資訊學/生態資訊學期中考')
write.csv(random10k,file = '~/Desktop/生態資訊學/生態資訊學期中考/random10k.csv')
write.csv(random10k,file = '~/Desktop/生態資訊學/生態資訊學期中考/random10k.csv', row.names = F)
write.csv(random10k,file = '~/Desktop/生態資訊學/生態資訊學期中考/random10k.csv', row.names = F)
sequence <- 15
fib <- numeric(sequence)
fib[1] <-1
fib[2] <-1
for (i in 3:sequence) {fib[i] <- fib[i-2]+fib[i-1]
}
print(fib)
library(data.table)
sample_data_parsed <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
class(sample_data_parsed)
sample_data_parsed<- cbind(sample_data_parsed,strptime(sample_data_parsed$yyyymmddhh-1,"%Y%m%d%H"))
colnames(sample_data_parsed) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
View(sample_data_parsed)
sample_data_parsed[, month:= format.Date(timestamp, '%Y-%m')]
sample_data_parsed<- sample_data_parsed[ ,timestamp:=as.POSIXct (strptime(sample_data_parsed$yyyymmddhh-1,"%Y%m%d%H"))]
sample_data_parsed<- sample_data_parsed[ ,timestamp := as.POSIXct (strptime(sample_data_parsed$yyyymmddhh-1,"%Y%m%d%H"))]
sample_data_parsed <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
sample_data_parsed[ ,timestamp := as.POSIXct (strptime(sample_data_parsed$yyyymmddhh-1,"%Y%m%d%H"))]
sample_data_parsed[ ,timestamp := as.POSIXct (strptime(yyyymmddhh-1,'%Y%m%d%H'))]
install.packages("installr")
installr::updateR(keep_install_file=TRUE)
install.packages("instaR")
installR::updateR(keep_install_file=TRUE)
instaR::updateR(keep_install_file=TRUE)
install.packages("instaR")
install.packages("instaR")
install.packages("installr")
install.packages("instaR")
sample_data_parsed[, timestamp:=as.POSIXct (strptime(yyyymmddhh-1,'%Y%m%d%H'))]
sample_data_parsed[, timestamp: =as.POSIXct (strptime(yyyymmddhh-1,'%Y%m%d%H'))]
install.packages("dplyr_0,4.2.tar.gz", repos = NULL, type="source")
install.packages("dplyr_0.4.2.tar.gz", repos = NULL, type="source")
install.packages("dplyr")
sample_data_parsed <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
sample_data_parsed <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999'))
sample_data_parsed[, timestamp:= as.POSIXct(strptime(yyyymmddhh-1,'%Y%m%d%H'))]
sample_data_parsed[,timestamp:= as.POSIXct(strptime(yyyymmddhh-1,'%Y%m%d%H'))]
sample_data_parsed[,timestamp:= as.POSIXct(strptime(yyyymmddhh-1,'%Y%m%d%H'))]
[,timestamp
library(data.table)
install.packages("data.table")
sample_data <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999')
)
sample_data_parsed<- cbind(sample_data,strptime(sample_data$yyyymmddhh-1,"%Y%m%d%H"))
View(sample_data)
View(sample_data_parsed)
View(sample_data)
View(sample_data_parsed)
View(sample_data)
View(sample_data_parsed)
colnames(sample_data_parsed) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp')
View(sample_data_parsed)
sample_data_day<- cbind(sample_data,strptime(sample_data$yyyymmddhh-1,"%Y%m%d%H"))
sample_data_hour<- cbind(sample_data,strptime(sample_data$yyyymmddhh-1,"%Y%m%d%H"))
sample_data_hour<- cbind(sample_data,strptime(sample_data$yyyymmddhh-1,"%Y%m%d%H"))
sample_data_day<- cbind(sample_data,strptime(sample_data$yyyymmddhh-1,"%Y%m%d"))
sample_data_month<- cbind(sample_data,strptime(sample_data$yyyymmddhh-1,"%Y%m%"))
sample_data_year<- cbind(sample_data,strptime(sample_data$yyyymmddhh-1,"%Y"))
colnames(sample_data_parsed) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp','day','month','year')
View(sample_data_day)
col
col
hour <- strptime(sample_data$yyyymmddhh-1,"%Y%m%d%H")
day <- strptime(sample_data$yyyymmddhh-1,"%Y%m%d")
month <- strptime(sample_data$yyyymmddhh-1,"%Y%m")
year <- strptime(sample_data$yyyymmddhh-1,"%Y")
col <- c(hour, day , month, year )
sample_data_col<- cbind(sample_data,col)
View(sample_data_col)
sample_data_col<- cbind(sample_data, hour)
timestamp <- strptime(sample_data$yyyymmddhh-1,"%Y%m%d%H")
day <- strptime(sample_data$yyyymmddhh-1,"%Y%m%d")
month <- strptime(sample_data$yyyymmddhh-1,"%Y%m")
year <- strptime(sample_data$yyyymmddhh-1,"%Y")
sample_data_col<- cbind(sample_data, timestamp)
sample_data_col1<- cbind(sample_data, hour)
sample_data_col<- cbind(sample_data, timestamp)
sample_data_col1<- cbind(sample_data, day)
sample_data_col2<- cbind(sample_data, month)
sample_data_col3<- cbind(sample_data, year)
View(sample_data_col)
View(sample_data_col1)
View(sample_data_col2)
View(sample_data_col3)
View(sample_data_col)
View(sample_data_col1)
View(sample_data_col2)
colnames(sample_data_parsed) <-c('yyyymmddhh','PS01','TX01','RH01','WD01'   ,'WD02','PP01','SS01','timestamp','day','month','year')
sample_data_day<- cbind(sample_data,strptime(sample_data$yyyymmddhh-1,"%Y%m%d"))
sample_data_month<- cbind(sample_data_day,strptime(sample_data$yyyymmddhh-1,"%Y%m%"))
sample_data_year<- cbind(sample_data_month,strptime(sample_data$yyyymmddhh-1,"%Y"))
View(sample_data_year)
timestamp <- strptime(sample_data$yyyymmddhh-1,"%Y%m%d%H")
library(data.table)
sample_data <- read.table('~/Desktop/生態資訊學/生態資訊學期中考/sample_data.txt',header = TRUE,na.strings = c('-9996','-9997','-9999'))
timestamp <- strptime(sample_data$yyyymmddhh-1,"%Y%m%d%H")
day <- strptime(sample_data$yyyymmddhh-1,"%Y%m%d")
month <- strptime(sample_data$yyyymmddhh-1,"%Y%m")
year <- strptime(sample_data$yyyymmddhh-1,"%Y")
sample_data_day<- cbind(sample_data,strptime(sample_data$yyyymmddhh-1,"%Y%m%d"))
sample_data_day<- cbind(sample_data,timestamp))
sample_data_day<- cbind(sample_data,timestamp)
View(sample_data_day)
sample_data_timestamp<- cbind(sample_data,timestamp)
sample_data_day<- cbind(sample_data_timestamp,day)
View(sample_data_day)
sample_data_timestamp<- cbind(sample_data,timestamp)
sample_data_day<- cbind(sample_data_timestamp,day)
sample_data_mon<- cbind(sample_data_day,month)
sample_data_yr<- cbind(sample_data_mon,year)
View(sample_data_yr)
month <- strptime(sample_data_day$day,"%Y%m")
year <- strptime(sample_data_mon$month,"%Y")
sample_data_timestamp<- cbind(sample_data,timestamp)
sample_data_day<- cbind(sample_data_timestamp,day)
sample_data_mon<- cbind(sample_data_day,month)
sample_data_yr<- cbind(sample_data_mon,year)
View(sample_data_yr)
timestamp <- strptime(sample_data$yyyymmddhh-1,"%Y%m%d%H")
day <- strptime(timestamp,"%Y%m%d")
month <- strptime(timestamp,"%Y%m")
year <- strptime(timestamp,"%Y")
sample_data_timestamp<- cbind(sample_data,timestamp)
sample_data_day<- cbind(sample_data_timestamp,day)
sample_data_mon<- cbind(sample_data_day,month)
sample_data_yr<- cbind(sample_data_mon,year)
View(sample_data_yr)
timestamp <- strptime(sample_data$yyyymmddhh-1,"%Y-%m-%d-%H")
day <- strptime(timestamp,"%Y-%m-%d")
month <- strptime(timestamp,"%Y-%m")
year <- strptime(timestamp,"%Y")
timestamp <- as.Date.POSIXct(strptime(sample_data$yyyymmddhh-1,"%Y-%m-%d-%H"))
timestamp <- as.POSIXct(strptime(sample_data$yyyymmddhh-1,"%Y-%m-%d-%H"))
day <- strptime(timestamp,"%Y-%m-%d")
month <- strptime(timestamp,"%Y-%m")
year <- strptime(timestamp,"%Y")
sample_data_timestamp<- cbind(sample_data,timestamp)
sample_data_day<- cbind(sample_data_timestamp,day)
sample_data_mon<- cbind(sample_data_day,month)
sample_data_yr<- cbind(sample_data_mon,year)
View(sample_data_yr)
timestamp <- as.POSIXct(strptime(sample_data$yyyymmddhh-1,"%Y%m%d%H"))
day <- strptime(timestamp,"%Y%m%d")
month <- strptime(timestamp,"%Y%m")
year <- strptime(timestamp,"%Y")
timestamp <- as.POSIXct(strptime(sample_data$yyyymmddhh-1,'%Y%m%d%H'))
day <- strptime(timestamp,'%Y%m%d')
month <- strptime(timestamp,'%Y%m')
year <- strptime(timestamp,'%Y')
timestamp
day
timestamp <- as.POSIXct(strptime(sample_data$yyyymmddhh-1,'%Y%m%d%H'))
day <- as.POSIXct(strptime(sample_data$yyyymmddhh-1,'%Y%m%d'))
month <- as.POSIXct(strptime(sample_data$yyyymmddhh-1,'%Y%m'))
year <- as.POSIXct(strptime(sample_data$yyyymmddhh-1,'%Y'))
month
day
year
sample_data_timestamp<- cbind(sample_data,timestamp)
sample_data_day<- cbind(sample_data_timestamp,day)
month <- as.POSIXct(strptime(sample_data_day,'%Y%m'))
month <- as.POSIXct(strptime(sample_data_day$day,'%Y%m'))
month <- as.POSIXct(strptime(sample_data$yyyymmddhh-1,'%Y%m'))
day <- format.Date(timestamp,'%Y%m%d')
month <- format.Date(strptime(timestamp,'%Y%m'))
month <- format.Date(timestamp,'%Y%m')
year <- format.Date(timestamp,'%Y'))
year <- format.Date(timestamp,'%Y')
sample_data_timestamp<- cbind(sample_data,timestamp, day , month, year)
View(sample_data_yr)
sample_data_allcol<- cbind(sample_data,timestamp, day , month, year)
View(sample_data_allcol)
mean_omit_na <-function(
as.numeric(x)
mean(x, na.rm = T)
)
mean_omit_na <-function(
as.numeric(x)
mean(x, na.rm = T)
)
mean_omit_na <-function{
mean_omit_na <-function{
as.numeric(x)
mean(x, na.rm = T)
}
x<-as.numeric(x)
mean_omit_na <-function{
x<-as.numeric(x)
mean(x, na.rm = T)
}
mean_omit_na <-function{
x<-as.numeric(x)
return(mean(x, na.rm = T))
}
return(mean(x, na.rm = T))}
mean_omit_na <-function(x){
x<-as.numeric(x)
return(mean(x, na.rm = T))}
}
mean_omit_na <-function(x){
x<-as.numeric(x)
return(mean(x, na.rm = T))
}
mean_MonTem<-aggregate(sample_data_allcol,sample_data_allcol$TX01 by= sample_data_allcol$month ,FUN= mean_omit_na)
mean_MonTem<-aggregate(sample_data_allcol$TX01, by= sample_data_allcol$month ,FUN= mean_omit_na)
mean_MonTem<-aggregate(sample_data_allcol$TX01, by= list (sample_data_allcol$month) ,FUN= mean_omit_na)
mean_MonTem
